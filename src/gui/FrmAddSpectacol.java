/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package gui;

import dvdrental.Spectacol;
import java.awt.Image;
import java.io.File;
import java.util.Calendar;
import java.util.Date;
import javax.swing.ImageIcon;
import javax.swing.JDialog;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.JSpinner;
import javax.swing.filechooser.FileNameExtensionFilter;
import models.SpectacolB;
import services.SpectacoleService;
import services.SpectacoleServiceImpl;

/**
 *
 * @author Stefan
 */
public class FrmAddSpectacol extends javax.swing.JDialog {
    
    private SpectacoleService spectacoleService = SpectacoleServiceImpl.getInstance();
    private Spectacol spectacolSelectat;
    private OnSpectacolSaved onSpectacolSaved;
    private FileNameExtensionFilter filter=new FileNameExtensionFilter("gege", "jpg", "jpeg", "png");
    private String imagePath;

    /**
     * Creates new form FrmAddSpectacol
     */
    public FrmAddSpectacol(javax.swing.JDialog parent, boolean modal) {
        super(parent, modal);
        initComponents();
        JSpinner.DateEditor de = new JSpinner.DateEditor(jSpinner1, "HH:mm");
        de.getTextField().setEditable(false);
        jSpinner1.setEditor(de);
        setTitle("Adauga spectacol");
        File currentDir=new File(".");
        File pictures=new File(currentDir, "pictures");
        if(!pictures.exists()){
            pictures.mkdir();
        }
        imagePath=pictures.getAbsolutePath().substring(0,pictures.getAbsolutePath().length()-10)+"pictures"+(char)(92)+"noImageSelected.png";
        
        System.out.println(imagePath);
    }
    
    public FrmAddSpectacol(JDialog parent, boolean modal, Spectacol spectacol) {
        super(parent, modal);
        initComponents();
        this.spectacolSelectat = spectacol;
        txtNumeSpectacol.setText(spectacolSelectat.getTitlu());
        txtDescriere.setText(spectacolSelectat.getDescriere());
        cmbTipSpectacol.setSelectedItem(spectacolSelectat.getTipul());
        jDateChooser1.setDate(spectacolSelectat.getData());
        jSpinner1.setValue(spectacolSelectat.getData());
        spnPret.setValue(spectacolSelectat.getPret());
        spnDurata.setValue(spectacolSelectat.getDurata());
        ImageIcon icon=new ImageIcon(spectacolSelectat.getImagePath());
        Image image = icon.getImage();
        Image imagineNoua = image.getScaledInstance(lblImage.getWidth(), lblImage.getHeight(), java.awt.Image.SCALE_SMOOTH);
        lblImage.setIcon(new ImageIcon(imagineNoua));
        JSpinner.DateEditor de = new JSpinner.DateEditor(jSpinner1, "HH:mm");
        de.getTextField().setEditable(false);
        jSpinner1.setEditor(de);
        setTitle("Editeaza spectacol");
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        fileChooser = new javax.swing.JFileChooser();
        lblNumeSpectacol = new javax.swing.JLabel();
        txtNumeSpectacol = new javax.swing.JTextField();
        lblTipulSpectacol = new javax.swing.JLabel();
        lblData = new javax.swing.JLabel();
        jDateChooser1 = new com.toedter.calendar.JDateChooser();
        lblPret = new javax.swing.JLabel();
        lblOra = new javax.swing.JLabel();
        jSpinner1 = new javax.swing.JSpinner();
        btnSalvare = new javax.swing.JButton();
        cmbTipSpectacol = new javax.swing.JComboBox<>();
        spnPret = new javax.swing.JSpinner();
        lblDescriereSpectacol = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtDescriere = new javax.swing.JTextArea();
        spnDurata = new javax.swing.JSpinner();
        lblDurata = new javax.swing.JLabel();
        lblImage = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        lblNumeSpectacol.setText("Numele Spectacolului:");

        lblTipulSpectacol.setText("Tipul Spectacolului:");

        lblData.setText("Data:");

        jDateChooser1.setDateFormatString("dd.MM.yyyy");

        lblPret.setText("Pret:");

        lblOra.setText("Ora:");

        jSpinner1.setModel(new javax.swing.SpinnerDateModel(new java.util.Date(), null, null, java.util.Calendar.MINUTE));

        btnSalvare.setText("Salveaza");
        btnSalvare.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalvareActionPerformed(evt);
            }
        });

        cmbTipSpectacol.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Film", "Scena de teatru", "Spectacol" }));

        spnPret.setModel(new javax.swing.SpinnerNumberModel());

        lblDescriereSpectacol.setText("Descriere Spectacol:");

        txtDescriere.setColumns(20);
        txtDescriere.setRows(5);
        jScrollPane1.setViewportView(txtDescriere);

        spnDurata.setModel(new javax.swing.SpinnerNumberModel(1, 1, 30, 1));

        lblDurata.setText("Durata:");

        lblImage.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        lblImage.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                lblImageMousePressed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblNumeSpectacol, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(lblDescriereSpectacol, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(lblTipulSpectacol, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(lblData, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(lblPret, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jDateChooser1, javax.swing.GroupLayout.DEFAULT_SIZE, 174, Short.MAX_VALUE)
                                    .addComponent(spnPret))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(18, 18, 18)
                                        .addComponent(lblOra))
                                    .addGroup(layout.createSequentialGroup()
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(lblDurata)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jSpinner1)
                                    .addComponent(spnDurata)))
                            .addComponent(cmbTipSpectacol, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(txtNumeSpectacol)
                                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 228, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(lblImage, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnSalvare, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                            .addComponent(lblNumeSpectacol)
                            .addComponent(txtNumeSpectacol, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblDescriereSpectacol)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(lblImage, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(lblTipulSpectacol)
                    .addComponent(cmbTipSpectacol, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(lblData)
                    .addComponent(jDateChooser1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblOra)
                    .addComponent(jSpinner1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(spnDurata, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblDurata)
                    .addComponent(spnPret, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblPret))
                .addGap(8, 8, 8)
                .addComponent(btnSalvare)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnSalvareActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalvareActionPerformed
        String numeSpectacol = txtNumeSpectacol.getText();
        String tipSpectacol = (String) cmbTipSpectacol.getSelectedItem();
        String descriereSpectacol = txtDescriere.getText();
        Date data = jDateChooser1.getDate();
        Date ora = (Date) jSpinner1.getValue();
        int durata = (int) spnDurata.getValue();
        Calendar c = Calendar.getInstance();
        Calendar c1 = Calendar.getInstance();
        c1.setTime(ora);
        c.setTime(data);
        c.set(Calendar.HOUR_OF_DAY, c1.get(Calendar.HOUR_OF_DAY));
        c.set(Calendar.MINUTE, c1.get(Calendar.MINUTE));
        Date dataSiOra = c.getTime();
        int pret = (int) spnPret.getValue();
        if (isFormValid()) {
            if (spectacolSelectat == null) {
                spectacolSelectat = new Spectacol(tipSpectacol, numeSpectacol, dataSiOra, descriereSpectacol, pret, durata);
                File src = new File(imagePath); 
                File currentDir=new File(".");
                File pictures=new File(currentDir, "pictures");
                if(!pictures.exists()){
                    pictures.mkdir();
                }
                String ext=imagePath.substring(imagePath.lastIndexOf("."));
                File dst = new File(pictures,String.format("%s%s", String.valueOf(((int)(Math.random()*10000))),ext)); 
                src.renameTo(dst); 
                spectacolSelectat.setImagePath(dst.getPath());
            } else {
                spectacolSelectat.setDescriere(descriereSpectacol);
                spectacolSelectat.setTipul(tipSpectacol);
                spectacolSelectat.setTitlu(numeSpectacol);
                spectacolSelectat.setData(dataSiOra);
                spectacolSelectat.setPret(pret);
                spectacolSelectat.setDurata(durata);
                spectacolSelectat.setImagePath(imagePath);
            }
            onSpectacolSaved.saveSpectacol(spectacolSelectat);
            spectacoleService.salveazaSpectacol(spectacolSelectat);
            JOptionPane.showMessageDialog(this, "Spectacolul a fost salvat cu succes!");
            dispose();
        }

    }//GEN-LAST:event_btnSalvareActionPerformed

    private void lblImageMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblImageMousePressed
        fileChooser.setFileFilter(filter);
        int returnVal = fileChooser.showOpenDialog(spnPret);
        if (returnVal == JFileChooser.APPROVE_OPTION){
            ImageIcon icon=new ImageIcon(fileChooser.getSelectedFile().getAbsolutePath());
            Image image = icon.getImage();
            Image imagineNoua = image.getScaledInstance(lblImage.getWidth(), lblImage.getHeight(), java.awt.Image.SCALE_SMOOTH);
            lblImage.setIcon(new ImageIcon(imagineNoua));
            imagePath=fileChooser.getSelectedFile().getAbsolutePath();
        }
    }//GEN-LAST:event_lblImageMousePressed
    
    private boolean isFormValid() {
        if (txtNumeSpectacol.getText().trim().length() < 3) {
            JOptionPane.showMessageDialog(this, "Numele spectacolului trebuie sa contina minim 3 caractere!");
            txtNumeSpectacol.requestFocusInWindow();
            return false;
        }
        if (txtDescriere.getText().trim().length() < 1) {
            JOptionPane.showMessageDialog(this, "Trebuie sa adaugati o descriere!");
            txtDescriere.requestFocusInWindow();
            return false;
        }
        if ((int) spnPret.getValue() == 0) {
            JOptionPane.showMessageDialog(this, "Trebuie sa selectati un pret!");
            spnPret.requestFocusInWindow();
            return true;
        }
        
        return true;
    }
    
    public interface OnSpectacolSaved {
        
        void saveSpectacol(Spectacol s);
    }
    
    public void setOnSpectacolSaved(OnSpectacolSaved onSpectacolSaved) {
        this.onSpectacolSaved = onSpectacolSaved;
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnSalvare;
    private javax.swing.JComboBox<String> cmbTipSpectacol;
    private javax.swing.JFileChooser fileChooser;
    private com.toedter.calendar.JDateChooser jDateChooser1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSpinner jSpinner1;
    private javax.swing.JLabel lblData;
    private javax.swing.JLabel lblDescriereSpectacol;
    private javax.swing.JLabel lblDurata;
    private javax.swing.JLabel lblImage;
    private javax.swing.JLabel lblNumeSpectacol;
    private javax.swing.JLabel lblOra;
    private javax.swing.JLabel lblPret;
    private javax.swing.JLabel lblTipulSpectacol;
    private javax.swing.JSpinner spnDurata;
    private javax.swing.JSpinner spnPret;
    private javax.swing.JTextArea txtDescriere;
    private javax.swing.JTextField txtNumeSpectacol;
    // End of variables declaration//GEN-END:variables
}
