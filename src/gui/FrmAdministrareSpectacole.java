/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package gui;

import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Calendar;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import models.Spectacol;
import services.SpectacoleService;
import services.SpectacoleServiceImpl;
import utils.TableColumnAdjuster;

/**
 *
 * @author Stefan
 */
public class FrmAdministrareSpectacole extends javax.swing.JDialog implements FrmAddSpectacol.OnSpectacolSaved {

    private ArrayList<Spectacol> listaSpectacole;
    private SpectacoleService spectacoleService = new SpectacoleServiceImpl();
    private String[][] data;
    private DefaultTableModel defaultTableModel;
    private String[] columnNames = new String[]{"Tipul", "Numele spectacolului", "Data", "Ora", "Pretul"};
    private final TableColumnAdjuster tca;

    /**
     * Creates new form FrmAdministrareSpectacole
     */
    public FrmAdministrareSpectacole(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        listaSpectacole = (ArrayList<Spectacol>) spectacoleService.getAll();
        data = new String[listaSpectacole.size()][5];
        int x = 0;
        DateFormat formatter = new SimpleDateFormat("dd.MM.yyyy");
        DateFormat formatter1 = new SimpleDateFormat("HH.mm");
        for (Spectacol s : listaSpectacole) {
            data[x][0] = s.getTipul();
            data[x][1] = s.getTitlu();
            data[x][2] = formatter.format(s.getDataOra());
            data[x][3] = formatter1.format(s.getDataOra());
            data[x][4] = String.valueOf(s.getPret());
            x++;
        }

        defaultTableModel = new DefaultTableModel(data, columnNames);
        initComponents();
        tblSpectacole.setModel(defaultTableModel);
        tblSpectacole.setAutoResizeMode(JTable.AUTO_RESIZE_OFF);
        tca = new TableColumnAdjuster(tblSpectacole);
        refreshTableColumns();

        setTitle("Administrare Spectacole");
    }

    private void refreshTableColumns() {
        tca.setColumnHeaderIncluded(true);
        tca.setOnlyAdjustLarger(true);
        tca.setColumnDataIncluded(true);
        tca.setDynamicAdjustment(true);
        tca.adjustColumns();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tblSpectacole = new javax.swing.JTable();
        btnAdauga = new javax.swing.JButton();
        btnEditeaza = new javax.swing.JButton();
        btnSterge = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        tblSpectacole.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Tipul", "Numele spectacolului", "Data", "Ora", "Pretul"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                true, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblSpectacole);
        if (tblSpectacole.getColumnModel().getColumnCount() > 0) {
            tblSpectacole.getColumnModel().getColumn(0).setResizable(false);
        }

        btnAdauga.setText("Adauga Spectacol");
        btnAdauga.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAdaugaActionPerformed(evt);
            }
        });

        btnEditeaza.setText("Editeaza Spectacol");
        btnEditeaza.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditeazaActionPerformed(evt);
            }
        });

        btnSterge.setText("Sterge Spectacol");
        btnSterge.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnStergeActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 476, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btnAdauga)
                        .addGap(18, 18, 18)
                        .addComponent(btnEditeaza)
                        .addGap(18, 18, 18)
                        .addComponent(btnSterge)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 245, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnAdauga)
                    .addComponent(btnEditeaza)
                    .addComponent(btnSterge))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnAdaugaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAdaugaActionPerformed
        FrmAddSpectacol addSpectacol = new FrmAddSpectacol(FrmAdministrareSpectacole.this, true);
        addSpectacol.setOnSpectacolSaved(this);
        addSpectacol.setLocationRelativeTo(this);
        addSpectacol.setVisible(true);
    }//GEN-LAST:event_btnAdaugaActionPerformed

    private void btnEditeazaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditeazaActionPerformed
        int index = tblSpectacole.convertRowIndexToModel(tblSpectacole.getSelectedRow());
        if (index == -1) {
            JOptionPane.showMessageDialog(this, "Va rugam selectati un spectacol.");
            return;
        }
        Spectacol s = listaSpectacole.get(index);
        FrmAddSpectacol addSpectacol = new FrmAddSpectacol(FrmAdministrareSpectacole.this, true, s);
        addSpectacol.setOnSpectacolSaved(this);
        addSpectacol.setLocationRelativeTo(this);
        addSpectacol.setTitle("Editeaza Spectacol");
        addSpectacol.setVisible(true);
    }//GEN-LAST:event_btnEditeazaActionPerformed

    private void btnStergeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnStergeActionPerformed
        int index = tblSpectacole.convertRowIndexToModel(tblSpectacole.getSelectedRow());
        if (index == -1) {
            JOptionPane.showMessageDialog(this, "Va rugam selectati un spectacol.");
            return;
        }
        Spectacol ss = listaSpectacole.get(index);
        int raspuns = JOptionPane.showConfirmDialog(this, String.format("Sunteti sigur ca vreti sa stergeti spectacolul %s?", ss.getTitlu()), "Stergere Spectacol", JOptionPane.YES_NO_OPTION);
        if (raspuns == JOptionPane.YES_OPTION) {
            spectacoleService.remove(ss);
            listaSpectacole = (ArrayList<Spectacol>) spectacoleService.getAll();
            data = new String[listaSpectacole.size()][5];
            int x = 0;
            DateFormat formatter = new SimpleDateFormat("dd.MM.yyyy");
            DateFormat formatter1 = new SimpleDateFormat("HH.mm");
            for (Spectacol s : listaSpectacole) {
                data[x][0] = s.getTipul();
                data[x][1] = s.getTitlu();
                data[x][2] = formatter.format(s.getDataOra());
                data[x][3] = formatter1.format(s.getDataOra());
                data[x][4] = String.valueOf(s.getPret());
                x++;
            }
            defaultTableModel.setDataVector(data, columnNames);
            refreshTableColumns();
        }
    }//GEN-LAST:event_btnStergeActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FrmAdministrareSpectacole.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FrmAdministrareSpectacole.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FrmAdministrareSpectacole.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FrmAdministrareSpectacole.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                FrmAdministrareSpectacole dialog = new FrmAdministrareSpectacole(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdauga;
    private javax.swing.JButton btnEditeaza;
    private javax.swing.JButton btnSterge;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblSpectacole;
    // End of variables declaration//GEN-END:variables

    @Override
    public void saveSpectacol(Spectacol ss) {
        int index = listaSpectacole.indexOf(ss);
        if (index == -1) {
            listaSpectacole.add(ss);
        } else {
            listaSpectacole.set(index, ss);
        }
        data = new String[listaSpectacole.size()][5];
        int x = 0;
        DateFormat formatter = new SimpleDateFormat("dd.MM.yyyy");
        DateFormat formatter1 = new SimpleDateFormat("HH.mm");
        for (Spectacol s : listaSpectacole) {
            data[x][0] = s.getTipul();
            data[x][1] = s.getTitlu();
            data[x][2] = formatter.format(s.getDataOra());
            data[x][3] = formatter1.format(s.getDataOra());
            data[x][4] = String.valueOf(s.getPret());
            x++;
        }
        defaultTableModel.setDataVector(data, columnNames);
        refreshTableColumns();
    }
}
